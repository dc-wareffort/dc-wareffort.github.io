{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component, Fragment } from 'react';\nexport default class Item extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"formatNumber\", rawNum => {\n      return Number(parseFloat(rawNum).toFixed(0)).toLocaleString('en', {\n        minimumFractionDigits: 0\n      });\n    });\n  }\n\n  render() {\n    const styles = {\n      prog: {\n        width: `${Math.floor(this.props.current / this.props.total * 100)}%`\n      }\n    };\n    return __jsx(Fragment, null, __jsx(\"div\", {\n      className: \"item\"\n    }, __jsx(\"a\", {\n      href: `https://classic.wowhead.com/item=${this.props.id}/`,\n      \"data-wowhead\": `item=${this.props.id}`\n    }, __jsx(\"img\", {\n      src: `https://wow.zamimg.com/images/wow/icons/large/${this.props.pic}`\n    })), __jsx(\"span\", {\n      className: \"percent\"\n    }, Math.floor(this.props.current / this.props.total * 100)), __jsx(\"div\", {\n      className: \"meter\"\n    }, __jsx(\"span\", {\n      className: \"progress\",\n      style: styles.prog\n    }, this.formatNumber(this.props.current), \" /\", ' ', this.formatNumber(this.props.total)))));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}